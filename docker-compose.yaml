services:
  nginx:
    image: nginx:1
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    networks:
      - frontend
    depends_on:
      teiserver:
        condition: service_healthy
    env_file:
      - ./runtime/$COMPOSE_ENV/frontend.env
    volumes:
      - ./runtime/$COMPOSE_ENV/tls:/run/secrets:ro
      - ./misc/compose/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./misc/compose/config/nginx-server.conf.template:/etc/nginx/templates/nginx-server.conf.template:ro

  teiserver:
    build:
      context: .
      target: $COMPOSE_ENV
      args:
        MIX_ENV: $COMPOSE_ENV
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GAME_NAME=Beyond All Reason
      - GAME_NAME_SHORT=BAR
      - WEBSITE=https://www.beyondallreason.info
      - PRIVACY_EMAIL=privacy@beyondallreason.info
      - POSTGRES_HOSTNAME=postgres
    env_file:
      - runtime/$COMPOSE_ENV/teiserver.env
      - runtime/$COMPOSE_ENV/backend.env
      - runtime/$COMPOSE_ENV/frontend.env
    volumes:
      - ./runtime/$COMPOSE_ENV/tls:/run/secrets:ro
    networks:
      - frontend
      - backend
    restart: always
    expose:
      - "8080"
    ports:
      - target: 8200
        published: 8200
        protocol: tcp
      - target: 8201
        published: 8201
        protocol: tcp
      - target: 8202
        published: 8202
        protocol: tcp
    healthcheck:
      test: curl http://localhost:8080 || exit 1
      start_period: 1m # database migrations, dev mode, etc..

  postgres:
    image: postgres:15
    restart: always
    environment:
      - PGDATA=/data
    env_file:
      - runtime/$COMPOSE_ENV/backend.env
    healthcheck:
      # $$ escapes the $ so it's parsed as the variable in the container, not outside of the container
      test: psql -U $$POSTGRES_USER -c '\q' || exit 1
    networks:
      - backend
    expose:
      - "5432"
    volumes:
      - /data

networks:
  frontend: {}
  backend: {}
